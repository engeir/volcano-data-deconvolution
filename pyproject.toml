[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[project]
name = "volcano-data-deconvolution"
version = "1.2.1"
description = "Deconvolution applied to volcanic eruption time series"
authors = [{ name = "engeir", email = "engeir@pm.me" }]
dependencies = [
  "numpy>=1.26.4",
  "matplotlib>=3.8.3",
  "h5netcdf>=1.3.0",
  "dask>=2024.2.0",
  "nc-time-axis>=1.4.1",
  "xarray>=2024.2.0",
  "volcano-base>=2.1.0",
  "pydantic>=2.6.4",
  "pyqt5>=5.15.10",
  "plastik>=0.7.2",
  "sympy>=1.12",
  "cartopy>=0.23.0",
  "cmcrameri>=1.8",
  "xmovie>=0.3.1",
  "cosmoplots>=0.4.3",
  "scipy>=1.14.1",
  "closedexpressions",
  "fppanalysis",
  "statsmodels>=0.14.4",
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.12,<3.13"

[project.scripts]
vdd = "vdd.__main__:main"
vdd-plot-response = "vdd.plotting.deconv_ob16_cesm2:main"
vdd-plot-simulations = "vdd.plotting.simulations_overview:main"
vdd-plot-sea-ice = "vdd.plotting.sea_ice:plot_sea_ice"
vdd-plot-double-waveform = "vdd.plotting.check_double_waveform:main"
vdd-plot-cut-off = "vdd.plotting.cut_off:_main"
vdd-plot-reconstruction = "vdd.plotting.reconstruction:_main"
vdd-plot-extra-reff = "vdd.plotting.double_eruption_reff_oh_so2:_main"
vdd-plot-ob16-classification = "vdd.plotting.ob16_waiting_times_and_size:_main"

[project.urls]
repository = "https://github.com/engeir/volcano-data-deconvolution"

[tool.uv]
dev-dependencies = [
  "pytest>=8.1.1",
  "pydocstringformatter>=0.7.3",
  "pydoclint>=0.4.1",
  "xdoctest>=1.1.3",
  "pre-commit>=3.7.0",
  "pre-commit-hooks>=4.6.0",
  "mypy>=1.10.1",
  "ruff>=0.5.0",
  "jsonschema>=4.22.0",
]

[tool.uv.sources]
closedexpressions = { git = "https://github.com/uit-cosmo/fpp-closed-expressions", rev = "main" }
fppanalysis = { git = "https://github.com/uit-cosmo/fpp-analysis-tools", rev = "main" }

[tool.isort]
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
profile = "black"
use_parentheses = true

[tool.mypy]
disable_error_code = ["call-arg"]
allow_redefinition = false
check_untyped_defs = true
disallow_untyped_calls = false
files = ["src", "tests"]
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pydocstringformatter]
numpydoc-section-hyphen-length = true
split-summary-body = false
strip-whitespaces = true
style = ["pep257", "numpydoc"]
write = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  "*.pyi",
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
# Files that were downloaded
extend-exclude = []
# Same as Black.
line-length = 88
# Assume Python 3.12
target-version = "py312"

[tool.ruff.format]
preview = false
docstring-code-format = true
docstring-code-line-length = 88

[tool.ruff.lint]
preview = false
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# select = ["E4", "E7", "E9", "F"]  # These are the default
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
  "CPY001",
  "COM812",
  "E501",   # Line too long
  "ERA001", # Uncommented code
  "ISC001",
  "T201",   # `print` found
]
per-file-ignores = {}
select = [
  "ALL",
  # https://docs.astral.sh/ruff/rules/
]
unfixable = []

[tool.ruff.lint.flake8-import-conventions]

[tool.ruff.lint.flake8-import-conventions.aliases]
# Declare the default aliases.
"matplotlib.pyplot" = "plt"
numpy = "np"
scipy = "sp"
xarray = "xr"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.isort]
case-sensitive = true
known-local-folder = ["src", "vdd"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
ignore-decorators = ["typing.overload"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pyright]
exclude = [".venv"]
venvPath = "."
venv = ".venv"

[tool.basedpyright]
exclude = [".venv"]
venvPath = "."
venv = ".venv"
