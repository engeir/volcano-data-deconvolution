[project]
name = "volcano-data-deconvolution"
version = "0.3.0"
description = "Deconvolution applied to volcanic eruption time series"
authors = [{ name = "engeir", email = "engeir@pm.me" }]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">= 3.12"
dependencies = [
  "numpy>=1.26.4",
  "matplotlib>=3.8.3",
  "fppanalysis>=0.1.4",
  "h5netcdf>=1.3.0",
  "dask>=2024.2.0",
  "nc-time-axis>=1.4.1",
  "xarray>=2024.2.0",
  "volcano-base>=1.8.1",
  "cosmoplots>=0.3.0",
  "pydantic>=2.6.4",
  "pyqt5>=5.15.10",
  "plastik>=0.6.2",
]
[project.urls]
repository = "https://github.com/engeir/volcano-data-deconvolution"

[project.scripts]
vdd = "vdd.__main__:main"

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

# [tool.hatch.build.targets.wheel]
# only-include = ["src/vdd"]

# [tool.hatch.build.targets.wheel.sources]
# "src" = ""
# "vdd" = "vdd"
# [tool.hatch.build.targets.wheel]
# packages = ["src/vdd"]
# [tool.hatch.build]
# include = ["vdd"]
# where = "src"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool]
rye = { dev-dependencies = [
  "pytest>=8.1.1",
  "pydocstringformatter>=0.7.3",
  "pydoclint>=0.4.1",
  "xdoctest>=1.1.3",
  "pre-commit>=3.6.2",
  "pre-commit-hooks>=4.5.0",
  "mypy>=1.9.0",
] }

[tool.mypy]
files = ["src", "tests"]
ignore_missing_imports = true
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
implicit_reexport = false
local_partial_types = true
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
# Files that were downloaded
extend-exclude = ["python-ucar.cgd.ccsm4.cesmLME*py"]

# Same as Black.
line-length = 88

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
per-file-ignores = {}

select = [ # https://docs.astral.sh/ruff/rules/
  "B",  # flake8-bugbear
  "D",  # pydocstyle
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
  "PL", # pylint
  "Q",  # flake8-quotes
  "UP", # pyupgrade
]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# select = ["E4", "E7", "E9", "F"]  # These are the default
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
  # "COM812", # Since we don't select COM, this is already ignored
  # "COM819", # Since we don't select COM, this is already ignored
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "E266",
  "E501",
  # "ISC001", # Since we don't select ISC, this is already ignored
  # "ISC002", # Since we don't select ISC, this is already ignored
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  # "W191",  # Since we don't select W, this is already ignored
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "numpy"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-import-conventions]
[tool.ruff.lint.flake8-import-conventions.aliases]
# Declare the default aliases.
"matplotlib.pyplot" = "plt"
numpy = "np"
scipy = "sp"
xarray = "xr"

[tool.ruff.lint.isort]
case-sensitive = true
known-local-folder = ["src", "vdd"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
profile = "black"
combine_as_imports = true

[tool.pydocstringformatter]
write = true
strip-whitespaces = true
split-summary-body = false
numpydoc-section-hyphen-length = true
style = ["pep257", "numpydoc"]
